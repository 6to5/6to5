// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`normalize options Babel 7 should throw when \`"allExtensions"\` is not a boolean 1`] = `"@babel/preset-typescript: 'allExtensions' option must be a boolean."`;

exports[`normalize options Babel 7 should throw when \`"isTSX"\` is not a boolean 1`] = `"@babel/preset-typescript: 'isTSX' option must be a boolean."`;

exports[`normalize options Babel 7 should throw when \`"jsxPragmaFrag"\` is not a string 1`] = `"@babel/preset-typescript: 'jsxPragmaFrag' option must be a string."`;

exports[`normalize options Babel_8_breaking should throw when \`"allExtensions"\` is not a boolean 1`] = `"@babel/preset-typescript: 'allExtensions' option must be a boolean."`;

exports[`normalize options Babel_8_breaking should throw when \`"allowDeclareFields"\` is not a boolean 1`] = `"@babel/preset-typescript: 'allowDeclareFields' option must be a boolean."`;

exports[`normalize options Babel_8_breaking should throw when \`"allowNamespaces"\` is not a boolean 1`] = `"@babel/preset-typescript: 'allowNamespaces' option must be a boolean."`;

exports[`normalize options Babel_8_breaking should throw when \`"isTSX"\` is not a boolean 1`] = `"@babel/preset-typescript: 'isTSX' option must be a boolean."`;

exports[`normalize options Babel_8_breaking should throw when \`"jsxPragma"\` is not a string 1`] = `"@babel/preset-typescript: 'jsxPragma' option must be a string."`;

exports[`normalize options Babel_8_breaking should throw when \`"jsxPragmaFrag"\` is not a string 1`] = `"@babel/preset-typescript: 'jsxPragmaFrag' option must be a string."`;

exports[`normalize options Babel_8_breaking should throw when \`"onlyRemoveTypeImports"\` is not a boolean 1`] = `"@babel/preset-typescript: 'onlyRemoveTypeImports' option must be a boolean."`;
