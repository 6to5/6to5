// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`keyword test emoji identifier 1`] = `
Node {
  "comments": Array [],
  "end": 11,
  "errors": Array [],
  "loc": SourceLocation {
    "end": Position {
      "column": 11,
      "line": 1,
    },
    "start": Position {
      "column": 0,
      "line": 1,
    },
  },
  "program": Node {
    "body": Array [
      Node {
        "declarations": Array [
          Node {
            "end": 10,
            "id": Node {
              "end": 6,
              "loc": SourceLocation {
                "end": Position {
                  "column": 6,
                  "line": 1,
                },
                "identifierName": "üòÅ",
                "start": Position {
                  "column": 4,
                  "line": 1,
                },
              },
              "name": "üòÅ",
              "start": 4,
              "type": "Identifier",
            },
            "init": Node {
              "end": 10,
              "extra": Object {
                "raw": "1",
                "rawValue": 1,
              },
              "loc": SourceLocation {
                "end": Position {
                  "column": 10,
                  "line": 1,
                },
                "start": Position {
                  "column": 9,
                  "line": 1,
                },
              },
              "start": 9,
              "type": "NumericLiteral",
              "value": 1,
            },
            "loc": SourceLocation {
              "end": Position {
                "column": 10,
                "line": 1,
              },
              "start": Position {
                "column": 4,
                "line": 1,
              },
            },
            "start": 4,
            "type": "VariableDeclarator",
          },
        ],
        "end": 11,
        "kind": "var",
        "loc": SourceLocation {
          "end": Position {
            "column": 11,
            "line": 1,
          },
          "start": Position {
            "column": 0,
            "line": 1,
          },
        },
        "start": 0,
        "type": "VariableDeclaration",
      },
    ],
    "directives": Array [],
    "end": 11,
    "interpreter": null,
    "loc": SourceLocation {
      "end": Position {
        "column": 11,
        "line": 1,
      },
      "start": Position {
        "column": 0,
        "line": 1,
      },
    },
    "sourceType": "module",
    "start": 0,
    "type": "Program",
  },
  "start": 0,
  "type": "File",
}
`;

exports[`keyword test emoji keyword 1`] = `
Node {
  "comments": Array [],
  "end": 12,
  "errors": Array [],
  "loc": SourceLocation {
    "end": Position {
      "column": 12,
      "line": 1,
    },
    "start": Position {
      "column": 0,
      "line": 1,
    },
  },
  "program": Node {
    "body": Array [
      Node {
        "alternate": null,
        "consequent": Node {
          "body": Array [],
          "directives": Array [],
          "end": 12,
          "loc": SourceLocation {
            "end": Position {
              "column": 12,
              "line": 1,
            },
            "start": Position {
              "column": 10,
              "line": 1,
            },
          },
          "start": 10,
          "type": "BlockStatement",
        },
        "end": 12,
        "loc": SourceLocation {
          "end": Position {
            "column": 12,
            "line": 1,
          },
          "start": Position {
            "column": 0,
            "line": 1,
          },
        },
        "start": 0,
        "test": Node {
          "end": 8,
          "loc": SourceLocation {
            "end": Position {
              "column": 8,
              "line": 1,
            },
            "start": Position {
              "column": 4,
              "line": 1,
            },
          },
          "start": 4,
          "type": "BooleanLiteral",
          "value": true,
        },
        "type": "IfStatement",
      },
    ],
    "directives": Array [],
    "end": 12,
    "interpreter": null,
    "loc": SourceLocation {
      "end": Position {
        "column": 12,
        "line": 1,
      },
      "start": Position {
        "column": 0,
        "line": 1,
      },
    },
    "sourceType": "module",
    "start": 0,
    "type": "Program",
  },
  "start": 0,
  "type": "File",
}
`;

exports[`keyword test switch if keyword 1`] = `
Node {
  "comments": Array [],
  "end": 12,
  "errors": Array [],
  "loc": SourceLocation {
    "end": Position {
      "column": 12,
      "line": 1,
    },
    "start": Position {
      "column": 0,
      "line": 1,
    },
  },
  "program": Node {
    "body": Array [
      Node {
        "alternate": null,
        "consequent": Node {
          "body": Array [],
          "directives": Array [],
          "end": 12,
          "loc": SourceLocation {
            "end": Position {
              "column": 12,
              "line": 1,
            },
            "start": Position {
              "column": 10,
              "line": 1,
            },
          },
          "start": 10,
          "type": "BlockStatement",
        },
        "end": 12,
        "loc": SourceLocation {
          "end": Position {
            "column": 12,
            "line": 1,
          },
          "start": Position {
            "column": 0,
            "line": 1,
          },
        },
        "start": 0,
        "test": Node {
          "end": 8,
          "loc": SourceLocation {
            "end": Position {
              "column": 8,
              "line": 1,
            },
            "start": Position {
              "column": 4,
              "line": 1,
            },
          },
          "start": 4,
          "type": "BooleanLiteral",
          "value": true,
        },
        "type": "IfStatement",
      },
    ],
    "directives": Array [],
    "end": 12,
    "interpreter": null,
    "loc": SourceLocation {
      "end": Position {
        "column": 12,
        "line": 1,
      },
      "start": Position {
        "column": 0,
        "line": 1,
      },
    },
    "sourceType": "module",
    "start": 0,
    "type": "Program",
  },
  "start": 0,
  "type": "File",
}
`;
