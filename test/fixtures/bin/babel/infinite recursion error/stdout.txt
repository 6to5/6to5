"use strict";

var _prototypeProperties = function (child, staticProps, instanceProps) { if (staticProps) Object.defineProperties(child, staticProps); if (instanceProps) Object.defineProperties(child.prototype, instanceProps); };

var _classCallCheck = function (instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } };

var Foo = (function () {
  function Foo() {
    _classCallCheck(this, Foo);
  }

  _prototypeProperties(Foo, null, (function () {
    var _prototypeProperties2 = {};
    _prototypeProperties2[Symbol.iterator] = {
      value: function () {
        return this;
      },
      writable: true,
      configurable: true
    };
    return _prototypeProperties2;
  })());

  return Foo;
})();